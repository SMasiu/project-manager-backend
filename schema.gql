# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AllFriends {
  my: [User!]!
  invited: [User!]!
}

type Column {
  column_id: ID!
  name: String!
  position: Int!
  project: Project!
}

"""Date custom scalar type"""
scalar Date

type Me {
  user_id: ID!
  name: String!
  surname: String!
  nick: String!
  email: String!
}

type MeStatus {
  logged: Boolean!
  me: Me
}

type Mutation {
  LogoutUser: String!
  LoginUser(userName: String!, password: String!): Me!
  CreateUser(email: String!, name: String!, surname: String!, password: String!, confirmPassword: String!, nick: String!): Me!
  CreateTeam(name: String!): Team!
  AddTeamMember(teamId: ID!, userId: ID!): TeamMember!
  AcceptTeamInvitation(team_id: ID!): TeamMember!
  LeaveTeam(team_id: ID!): TeamMember!
  DeleteTeam(team_id: ID!): Team!
  KickOutOfTheTeam(team_id: ID!, user_id: ID!): TeamMember!
  ChangeMemberPermission(team_id: ID!, user_id: ID!, permission: Int!): TeamMember!
  ChangeOwner(team_id: ID!, user_id: ID!): Team!
  InviteFriend(user_id: ID!): User!
  RejectFriendInvitation(user_id: ID!): User!
  AcceptFriendInvitation(user_id: ID!): User!
  CancelFriendInvitation(user_id: ID!): User!
  DeleteFriend(user_id: ID!): User!
  CreateProject(name: String!, description: String!, owner_type: String!, team_id: ID = null): Project!
  ToogleOpenProject(open: Boolean!, project_id: ID!): Project!
  ChangeProjectOwnerType(project_id: ID!, owner_type: String!, team_id: ID): Project!
  DeleteProject(project_id: ID!): Project!
  CreateColumn(project_id: ID!, name: String!): Column!
  DeleteColumn(project_id: ID!, column_id: ID!): Column!
  UpdateColumn(project_id: ID!, column_id: ID!, name: ID!): Column!
  ChangeColumnPosition(project_id: ID!, column_id: ID!, position: Int!): [Column!]!
  CreateTask(project_id: ID!, column_id: ID!, name: String!, description: String!): Task!
  UpdateTask(task_id: ID!, project_id: ID!, name: String!, description: String!): Task!
  DeleteTask(task_id: ID!, project_id: ID!): Task!
  MoveTask(task_id: ID!, project_id: ID!, column_id: ID!): Task!
}

type Notifications {
  teamInvitations: [Team!]!
  friendInvitations: [User!]!
}

type Project {
  project_id: ID!
  name: String!
  description: String!
  open: Boolean!
  owner_type: String!
  creator: User!
  team: Team
}

type Query {
  User(id: ID!): User!
  Users(limit: Int, offset: Int, fullname: String = "", team_id: ID = "", friends: Boolean = true): [User!]!
  UsersCount(limit: Int, offset: Int, fullname: String = "", team_id: ID = "", friends: Boolean = true): Int!
  GetUsersAndCount(limit: Int, offset: Int, fullname: String = "", team_id: ID = "", friends: Boolean = true): UsersAndCount!
  CheckUserStatus: MeStatus!
  TeamMembers(id: ID!): [TeamMember!]!
  Teams: [Team!]!
  GetNotifications: Notifications!
  GetFriends: [User!]!
  GetInvitedFriends: [User!]!
  GetAllFriends: AllFriends!
  GetProjects: [Project!]!
}

type Task {
  task_id: ID!
  name: String!
  description: String!
  create_stamp: Date!
  creator: User!
  column: Column!
}

type Team {
  team_id: ID!
  name: String!
  owner: User!
  membersCount: Int!
}

type TeamMember {
  user: User!
  permission: Int!
}

type User {
  user_id: ID!
  name: String!
  surname: String!
  nick: String!
}

type UsersAndCount {
  users: [User!]!
  count: Int!
}
