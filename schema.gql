# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Me {
  user_id: ID!
  name: String!
  surname: String!
  nick: String!
  email: String!
}

type MeStatus {
  logged: Boolean!
  me: Me
}

type Mutation {
  LogoutUser: String!
  LoginUser(userName: String!, password: String!): Me!
  CreateUser(email: String!, name: String!, surname: String!, password: String!, confirmPassword: String!, nick: String!): Me!
  CreateTeam(name: String!): Team!
  AddTeamMember(teamId: ID!, userId: ID!): TeamMember!
  AcceptTeamInvitation(team_id: ID!): TeamMember!
  LeaveTeam(team_id: ID!): TeamMember!
  DeleteTeam(team_id: ID!): Team!
  KickOutOfTheTeam(team_id: ID!, user_id: ID!): TeamMember!
  ChangeMemberPermission(team_id: ID!, user_id: ID!, permission: Int!): TeamMember!
  ChangeOwner(team_id: ID!, user_id: ID!): Team!
}

type Notifications {
  teamInvitations: [Team!]!
}

type Query {
  User(id: ID!): User!
  Users(limit: Int, offset: Int, fullname: String = ""): [User!]!
  UsersCount(fullname: String = ""): Int!
  GetUsersAndCount(limit: Int, offset: Int, fullname: String = ""): UsersAndCount!
  CheckUserStatus: MeStatus!
  TeamMembers(id: ID!): [TeamMember!]!
  Teams: [Team!]!
  GetNotifications: Notifications!
}

type Team {
  team_id: ID!
  name: String!
  owner: User!
  membersCount: Int!
}

type TeamMember {
  user: User!
  permission: Int!
}

type User {
  user_id: ID!
  name: String!
  surname: String!
  nick: String!
}

type UsersAndCount {
  users: [User!]!
  count: Int!
}
